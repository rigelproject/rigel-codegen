//=====-- RigelSubtarget.h - Define Subtarget for the Rigel -----*- C++ -*--====//
//
//                     The LLVM Compiler Infrastructure
//
// This file was developed by the Rigel Team and is distributed under the 
// University of Illinois Open Source License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Rigel specific subclass of TargetSubtarget.
//
//===----------------------------------------------------------------------===//

#ifndef RIGELSUBTARGET_H
#define RIGELSUBTARGET_H

#include "llvm/Target/TargetSubtarget.h"
#include "llvm/Target/TargetMachine.h"

#include <string>

namespace llvm {
class Module;

class RigelSubtarget : public TargetSubtarget {

protected:
	//Has byte-size loads and stores, in addition to word-size
  bool HasByteLdSt;

  InstrItineraryData InstrItins;

  unsigned StackAlignment;

public:
  /// getInstrItins - Return the instruction itineraies based on subtarget 
  /// selection.
  const InstrItineraryData &getInstrItineraryData() const { return InstrItins; }
  /// This constructor initializes the data members to match that
  /// of the specified module.
  RigelSubtarget(const std::string &TT, const std::string &FS);
  
	unsigned getStackAlignment() {return 4; }
  /// ParseSubtargetFeatures - Parses features string setting specified 
  /// subtarget options.  Definition of function is auto generated by tblgen.
  std::string ParseSubtargetFeatures(const std::string &FS, const std::string &CPU);

  /// Features related to the presence of specific instructions.
  bool hasByteLdSt()  const { return HasByteLdSt; };

};
} // End llvm namespace

#endif
